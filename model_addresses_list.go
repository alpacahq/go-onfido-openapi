/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * API version: 3.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// AddressesList struct for AddressesList
type AddressesList struct {
	Addresses *[]Address `json:"addresses,omitempty"`
}

// NewAddressesList instantiates a new AddressesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressesList() *AddressesList {
	this := AddressesList{}
	return &this
}

// NewAddressesListWithDefaults instantiates a new AddressesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressesListWithDefaults() *AddressesList {
	this := AddressesList{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *AddressesList) GetAddresses() []Address {
	if o == nil || o.Addresses == nil {
		var ret []Address
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressesList) GetAddressesOk() (*[]Address, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *AddressesList) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []Address and assigns it to the Addresses field.
func (o *AddressesList) SetAddresses(v []Address) {
	o.Addresses = &v
}

func (o AddressesList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableAddressesList struct {
	value *AddressesList
	isSet bool
}

func (v NullableAddressesList) Get() *AddressesList {
	return v.value
}

func (v *NullableAddressesList) Set(val *AddressesList) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressesList) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressesList(val *AddressesList) *NullableAddressesList {
	return &NullableAddressesList{value: val, isSet: true}
}

func (v NullableAddressesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


