/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * API version: 3.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onfido_openapi

import (
	"encoding/json"
)

// ChecksList struct for ChecksList
type ChecksList struct {
	Checks *[]Check `json:"checks,omitempty"`
}

// NewChecksList instantiates a new ChecksList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChecksList() *ChecksList {
	this := ChecksList{}
	return &this
}

// NewChecksListWithDefaults instantiates a new ChecksList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChecksListWithDefaults() *ChecksList {
	this := ChecksList{}
	return &this
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *ChecksList) GetChecks() []Check {
	if o == nil || o.Checks == nil {
		var ret []Check
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChecksList) GetChecksOk() (*[]Check, bool) {
	if o == nil || o.Checks == nil {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *ChecksList) HasChecks() bool {
	if o != nil && o.Checks != nil {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []Check and assigns it to the Checks field.
func (o *ChecksList) SetChecks(v []Check) {
	o.Checks = &v
}

func (o ChecksList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Checks != nil {
		toSerialize["checks"] = o.Checks
	}
	return json.Marshal(toSerialize)
}

type NullableChecksList struct {
	value *ChecksList
	isSet bool
}

func (v NullableChecksList) Get() *ChecksList {
	return v.value
}

func (v *NullableChecksList) Set(val *ChecksList) {
	v.value = val
	v.isSet = true
}

func (v NullableChecksList) IsSet() bool {
	return v.isSet
}

func (v *NullableChecksList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChecksList(val *ChecksList) *NullableChecksList {
	return &NullableChecksList{value: val, isSet: true}
}

func (v NullableChecksList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChecksList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


