openapi: 3.0.0
info:
  description: The Onfido API is used to submit check requests.
  license:
    name: MIT
  title: Onfido API
  version: 3.1.0
externalDocs:
  url: https://documentation.onfido.com
servers:
- url: https://api.{region}.onfido.com/v3.1
  variables:
    region:
      default: eu
      enum:
      - eu
      - us
      - ca
security:
- Token: []
paths:
  /applicants:
    get:
      operationId: list_applicants
      parameters:
      - description: The page to return. The first page is `page=1`
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: The number of objects per page.
        in: query
        name: per_page
        schema:
          default: 20
          type: integer
      - description: Whether to also include applicants scheduled for deletion.
        in: query
        name: include_deleted
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicants_list'
          description: A list of applicants
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List Applicants
    post:
      operationId: create_applicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicant'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create Applicant
  /applicants/{applicant_id}:
    delete:
      operationId: destroy_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete Applicant
    get:
      operationId: find_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Applicant object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve Applicant
    put:
      description: |
        Applicant details can be updated between check creations.
        - Partial updates - Addresses and ID numbers present will replace existing ones - Same applicant validations to create applicant
      operationId: update_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applicant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applicant'
          description: Applicant Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update Applicant
  /applicants/{applicant_id}/restore:
    post:
      operationId: restore_applicant
      parameters:
      - in: path
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Restore Applicant
  /documents:
    get:
      description: All documents belonging to an applicant can be listed from this
        endpoint
      operationId: list_documents
      parameters:
      - in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documents_list'
          description: List of Documents
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List documents
    post:
      description: |
        Documents are uploaded using this endpoint. Along with the file upload the relevant document type must be specified. Documents must be uploaded as a multipart form. The valid file types are: jpg, png and pdf. The file size must be between 2KB and 3MB.
      operationId: upload_document
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                applicant_id:
                  description: The ID of the applicant whose document is being uploaded.
                  type: string
                type:
                  description: The type of document.
                  type: string
                file:
                  description: The file to be uploaded.
                  format: binary
                  type: string
                side:
                  description: Either the `front` or `back` of the document.
                  type: string
                issuing_country:
                  description: The issuing country of the document, a 3-letter ISO
                    code.
                  type: string
              required:
              - applicant_id
              - file
              - type
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: A document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload a document
  /documents/{document_id}:
    get:
      operationId: find_document
      parameters:
      - in: path
        name: document_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: A document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single document can be retrieved by calling this endpoint with the
        document’s unique identifier.
  /documents/{document_id}/download:
    get:
      operationId: download_document
      parameters:
      - in: path
        name: document_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The document binary data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download a documents raw data
  /live_photos:
    get:
      operationId: list_live_photos
      parameters:
      - description: The id of the applicant the live photos belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_photos_list'
          description: An array of live photos
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List live photos
    post:
      description: |
        You can upload live photos to this endpoint. Like document upload, files must be uploaded as a multipart form. Valid file types are jpg, png and pdf. The file size must be between 32KB and 10MB. Live photos are validated at the point of upload to check that they contain exactly one face. This validation can be disabled by setting the advanced_validation argument to false.
      operationId: upload_live_photo
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          multipart/form-data:
            schema:
              properties:
                applicant_id:
                  type: string
                file:
                  description: The file to be uploaded.
                  format: binary
                  type: string
                advanced_validation:
                  default: true
                  description: Validates that the live photo contains exactly one
                    face.
                  type: boolean
              required:
              - applicant_id
              - file
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_photo'
          description: The Live Photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Upload live photo
  /live_photos/{live_photo_id}:
    get:
      operationId: find_live_photo
      parameters:
      - description: The live photo’s unique identifier.
        in: path
        name: live_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_photo'
          description: A live photo
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve live photo
  /live_photos/{live_photo_id}/download:
    get:
      description: Live photos are downloaded using this endpoint.
      operationId: download_live_photo
      parameters:
      - description: The live photo’s unique identifier.
        in: path
        name: live_photo_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live photo's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live photo
  /live_videos:
    get:
      operationId: list_live_videos
      parameters:
      - description: The id of the applicant the live videos belong to.
        in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_videos_list'
          description: An array of live videos
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List live videos
  /live_videos/{live_video_id}:
    get:
      operationId: find_live_video
      parameters:
      - description: The live video’s unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/live_video'
          description: A live video
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve live video
  /live_videos/{live_video_id}/download:
    get:
      description: Live videos are downloaded using this endpoint.
      operationId: download_live_video
      parameters:
      - description: The live video’s unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live video's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live video
  /live_videos/{live_video_id}/frame:
    get:
      description: Live video frames are downloaded using this endpoint.
      operationId: download_live_video_frame
      parameters:
      - description: The live video’s unique identifier.
        in: path
        name: live_video_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: binary
                type: string
          description: The live video frame's binary data.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download live video frame
  /checks:
    get:
      operationId: list_checks
      parameters:
      - in: query
        name: applicant_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checks_list'
          description: An array of checks
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve Checks
    post:
      operationId: create_check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/check'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a check
  /checks/{check_id}:
    get:
      operationId: find_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check'
          description: Check object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Check
  /checks/{check_id}/resume:
    post:
      operationId: resume_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Resume a Check
  /checks/{check_id}/download:
    get:
      operationId: download_check
      parameters:
      - in: path
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The PDF binary data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Download a PDF of the check
  /reports:
    get:
      operationId: list_reports
      parameters:
      - in: query
        name: check_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reports_list'
          description: List of Reports
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: All the reports belonging to a particular check can be listed from
        this endpoint.
  /reports/{report_id}:
    get:
      operationId: find_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/report'
          description: Report object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: A single report can be retrieved using this endpoint with the corresponding
        unique identifier.
  /reports/{report_id}/resume:
    post:
      operationId: resume_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: This endpoint is for resuming individual paused reports.
  /reports/{report_id}/cancel:
    post:
      operationId: cancel_report
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: This endpoint is for cancelling individual paused reports.
  /webhooks:
    get:
      operationId: list_webhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_list'
          description: A list of webhooks
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List webhooks
    post:
      operationId: create_webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create a webhook
  /webhooks/{webhook_id}:
    delete:
      operationId: delete_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Webhook deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete a webhook
    get:
      operationId: find_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Webhook object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a Webhook
    put:
      operationId: edit_webhook
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Webhook Object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Edit a webhook
  /addresses/pick:
    get:
      operationId: find_addresses
      parameters:
      - in: query
        name: postcode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresses_list'
          description: A list of addresses
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Search for addresses by postcode
  /sdk_token:
    post:
      operationId: generate_sdk_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdk_token'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sdk_token'
          description: Generated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Generate a SDK token
components:
  requestBodies:
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    applicants_list:
      example:
        applicants:
        - address:
            building_name: building_name
            country: country
            town: town
            flat_number: flat_number
            street: street
            postcode: postcode
            state: state
            line3: line3
            line2: line2
            building_number: building_number
            line1: line1
            sub_street: sub_street
          dob: 2000-01-23
          sandbox: true
          created_at: 2000-01-23T04:56:07.000+00:00
          delete_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          id_numbers:
          - type: type
            state_code: state_code
            value: value
          - type: type
            state_code: state_code
            value: value
          id: id
          href: href
          first_name: first_name
          email: email
        - address:
            building_name: building_name
            country: country
            town: town
            flat_number: flat_number
            street: street
            postcode: postcode
            state: state
            line3: line3
            line2: line2
            building_number: building_number
            line1: line1
            sub_street: sub_street
          dob: 2000-01-23
          sandbox: true
          created_at: 2000-01-23T04:56:07.000+00:00
          delete_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          id_numbers:
          - type: type
            state_code: state_code
            value: value
          - type: type
            state_code: state_code
            value: value
          id: id
          href: href
          first_name: first_name
          email: email
      properties:
        applicants:
          items:
            $ref: '#/components/schemas/applicant'
          type: array
      type: object
    applicant:
      example:
        address:
          building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
        dob: 2000-01-23
        sandbox: true
        created_at: 2000-01-23T04:56:07.000+00:00
        delete_at: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        id_numbers:
        - type: type
          state_code: state_code
          value: value
        - type: type
          state_code: state_code
          value: value
        id: id
        href: href
        first_name: first_name
        email: email
      properties:
        id:
          description: The unique identifier for the applicant. Read-only.
          readOnly: true
          type: string
        created_at:
          description: The date and time when this applicant was created. Read-only.
          format: date-time
          readOnly: true
          type: string
        delete_at:
          description: The date and time when this applicant is scheduled to be deleted.
            Read-only.
          format: date-time
          readOnly: true
          type: string
        href:
          description: The uri of this resource. Read-only.
          readOnly: true
          type: string
        sandbox:
          description: Read-only.
          readOnly: true
          type: boolean
        first_name:
          description: The applicant’s first name
          type: string
        last_name:
          description: The applicant’s surname
          type: string
        email:
          description: The applicant’s email address. Required if doing a US check,
            or a UK check for which `applicant_provides_data` is `true`.
          type: string
        dob:
          description: The applicant’s date of birth
          format: date
          type: string
        address:
          $ref: '#/components/schemas/address'
        id_numbers:
          items:
            $ref: '#/components/schemas/id_number'
          type: array
      type: object
    documents_list:
      example:
        documents:
        - side: side
          download_href: download_href
          issuing_country: issuing_country
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          type: type
          file_size: 0
        - side: side
          download_href: download_href
          issuing_country: issuing_country
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          type: type
          file_size: 0
      properties:
        documents:
          items:
            $ref: '#/components/schemas/document'
          type: array
      type: object
    document:
      example:
        side: side
        download_href: download_href
        issuing_country: issuing_country
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        type: type
        file_size: 0
      properties:
        id:
          description: The unique identifier for the document
          type: string
        created_at:
          description: The date and time at which the document was uploaded
          format: date-time
          type: string
        file_name:
          description: The name of the uploaded file
          type: string
        file_size:
          description: The size of the file in bytes
          type: integer
        file_type:
          description: The file type of the uploaded file
          type: string
        type:
          description: The type of document
          type: string
        side:
          description: The side of the document, if applicable. The possible values
            are front and back
          type: string
        issuing_country:
          description: The issuing country of the document, a 3-letter ISO code.
          type: string
        href:
          description: The uri of this resource
          type: string
        download_href:
          description: The uri that can be used to download the document
          type: string
      type: object
    live_photos_list:
      example:
        live_photos:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
      properties:
        live_photos:
          items:
            $ref: '#/components/schemas/live_photo'
          type: array
      type: object
    live_photo:
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        file_size: 0
      properties:
        id:
          description: The unique identifier for the photo.
          type: string
        created_at:
          description: The date and time at which the photo was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the photo.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
        file_type:
          description: The file type of the uploaded file.
          type: string
      type: object
    live_videos_list:
      example:
        live_videos:
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
        - download_href: download_href
          file_name: file_name
          file_type: file_type
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          href: href
          file_size: 0
      properties:
        live_videos:
          items:
            $ref: '#/components/schemas/live_video'
          type: array
      type: object
    live_video:
      example:
        download_href: download_href
        file_name: file_name
        file_type: file_type
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        href: href
        file_size: 0
      properties:
        id:
          description: The unique identifier for the video.
          type: string
        created_at:
          description: The date and time at which the video was uploaded.
          format: date-time
          type: string
        href:
          description: The uri of this resource.
          type: string
        download_href:
          description: The uri that can be used to download the video.
          type: string
        file_name:
          description: The name of the uploaded file.
          type: string
        file_size:
          description: The size of the file in bytes.
          type: integer
        file_type:
          description: The file type of the uploaded file.
          type: string
      type: object
    checks_list:
      example:
        checks:
        - document_ids:
          - document_ids
          - document_ids
          suppress_form_emails: true
          created_at: 2000-01-23T04:56:07.000+00:00
          report_names:
          - report_names
          - report_names
          sub_result: sub_result
          results_uri: results_uri
          report_ids:
          - report_ids
          - report_ids
          privacy_notices_read_consent_given: true
          tags:
          - tags
          - tags
          result: result
          form_uri: form_uri
          webhook_ids:
          - webhook_ids
          - webhook_ids
          applicant_id: applicant_id
          download_uri: download_uri
          asynchronous: true
          id: id
          href: href
          redirect_uri: redirect_uri
          consider:
          - consider
          - consider
          status: status
          applicant_provides_data: true
        - document_ids:
          - document_ids
          - document_ids
          suppress_form_emails: true
          created_at: 2000-01-23T04:56:07.000+00:00
          report_names:
          - report_names
          - report_names
          sub_result: sub_result
          results_uri: results_uri
          report_ids:
          - report_ids
          - report_ids
          privacy_notices_read_consent_given: true
          tags:
          - tags
          - tags
          result: result
          form_uri: form_uri
          webhook_ids:
          - webhook_ids
          - webhook_ids
          applicant_id: applicant_id
          download_uri: download_uri
          asynchronous: true
          id: id
          href: href
          redirect_uri: redirect_uri
          consider:
          - consider
          - consider
          status: status
          applicant_provides_data: true
      properties:
        checks:
          items:
            $ref: '#/components/schemas/check'
          type: array
      type: object
    check:
      example:
        document_ids:
        - document_ids
        - document_ids
        suppress_form_emails: true
        created_at: 2000-01-23T04:56:07.000+00:00
        report_names:
        - report_names
        - report_names
        sub_result: sub_result
        results_uri: results_uri
        report_ids:
        - report_ids
        - report_ids
        privacy_notices_read_consent_given: true
        tags:
        - tags
        - tags
        result: result
        form_uri: form_uri
        webhook_ids:
        - webhook_ids
        - webhook_ids
        applicant_id: applicant_id
        download_uri: download_uri
        asynchronous: true
        id: id
        href: href
        redirect_uri: redirect_uri
        consider:
        - consider
        - consider
        status: status
        applicant_provides_data: true
      properties:
        id:
          description: The unique identifier for the check. Read-only.
          readOnly: true
          type: string
        created_at:
          description: The date and time when this check was created. Read-only.
          format: date-time
          readOnly: true
          type: string
        href:
          description: The uri of this resource. Read-only.
          readOnly: true
          type: string
        status:
          description: The current state of the check in the checking process. Read-only.
          readOnly: true
          type: string
        result:
          description: The overall result of the check, based on the results of the
            constituent reports. Read-only.
          readOnly: true
          type: string
        download_uri:
          description: A link to a PDF output of the check results. Append `.pdf`
            to get the pdf file. Read-only.
          readOnly: true
          type: string
        form_uri:
          description: A link to the applicant form, if `applicant_provides_data`
            is `true`. Read-only.
          readOnly: true
          type: string
        redirect_uri:
          description: For checks where `applicant_provides_data` is `true`, redirect
            to this URI when the applicant has submitted their data. Read-only.
          readOnly: true
          type: string
        results_uri:
          description: A link to the corresponding results page on the Onfido dashboard.
          readOnly: true
          type: string
        report_names:
          description: An array of report names (strings).
          items:
            type: string
          type: array
          writeOnly: true
        applicant_id:
          description: The ID of the applicant to do the check on.
          type: string
        privacy_notices_read_consent_given:
          description: Indicates whether the privacy notices and terms of service
            have been read and, where specific laws require, that consent has been
            given for Onfido.
          type: boolean
        tags:
          description: Array of tags being assigned to this check.
          items:
            type: string
          type: array
        applicant_provides_data:
          description: |
            Send an applicant form to applicant to complete to proceed with check. Defaults to false.
          type: boolean
        suppress_form_emails:
          description: |
            For checks where `applicant_provides_data` is `true`, applicant form will not be automatically sent if `suppress_form_emails` is set to `true`. You can manually send the form at any time after the check has been created, using the link found in the form_uri attribute of the check object. Write-only. Defaults to false.
          type: boolean
          writeOnly: true
        asynchronous:
          description: |
            Defaults to `true`. Write-only. If set to `false`, you will only receive a response when all reports in your check have completed.
          type: boolean
          writeOnly: true
        webhook_ids:
          description: Optional. An array of strings describing which webhooks to
            trigger for this check. By default, all webhooks registered in the account
            will be triggered and this value will be null in the responses.
          items:
            type: string
          type: array
        report_ids:
          description: An array of report ids.
          items:
            type: string
          type: array
        document_ids:
          description: Optional. An array of document ids, for use with Document reports
            only. If omitted, the Document report will use the most recently uploaded
            document by default.
          items:
            type: string
          type: array
          writeOnly: true
        consider:
          description: Returns a pre-determined consider sub-result in sandbox for
            the specific reports in the consider array.
          items:
            type: string
          type: array
          writeOnly: true
        sub_result:
          description: Triggers a pre-determined sub-result response for sandbox Document
            reports.
          type: string
      type: object
    reports_list:
      example:
        reports:
        - result: result
          documents:
          - id: id
          - id: id
          breakdown:
            key: '{}'
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          sub_result: sub_result
          check_id: check_id
          id: id
          href: href
          properties:
            key: '{}'
          status: status
        - result: result
          documents:
          - id: id
          - id: id
          breakdown:
            key: '{}'
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          sub_result: sub_result
          check_id: check_id
          id: id
          href: href
          properties:
            key: '{}'
          status: status
      properties:
        reports:
          items:
            $ref: '#/components/schemas/report'
          type: array
      type: object
    report:
      example:
        result: result
        documents:
        - id: id
        - id: id
        breakdown:
          key: '{}'
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        sub_result: sub_result
        check_id: check_id
        id: id
        href: href
        properties:
          key: '{}'
        status: status
      properties:
        id:
          description: The unique identifier for the report. Read-only.
          readOnly: true
          type: string
        created_at:
          description: The date and time at which the report was first initiated.
            Read-only.
          format: date-time
          readOnly: true
          type: string
        href:
          description: The API endpoint to retrieve the report. Read-only.
          readOnly: true
          type: string
        status:
          description: The current state of the report in the checking process. Read-only.
          readOnly: true
          type: string
        result:
          description: The result of the report. Read-only.
          readOnly: true
          type: string
        sub_result:
          description: The sub_result of the report. It gives a more detailed result
            for document reports only, and will be null otherwise. Read-only.
          readOnly: true
          type: string
        breakdown:
          additionalProperties: true
          description: The details of the report. This is specific to each type of
            report. Read-only.
          readOnly: true
          type: object
        properties:
          additionalProperties: true
          description: The properties associated with the report, if any. Read-only.
          readOnly: true
          type: object
        check_id:
          description: The ID of the check to which the report belongs. Read-only.
          readOnly: true
          type: string
        name:
          description: The name of the report type.
          type: string
        documents:
          description: Array of objects with document ids that were used in the Onfido
            engine. [ONLY USED IN A DOCUMENT CHECK]
          items:
            $ref: '#/components/schemas/report_document'
          type: array
      required:
      - name
      type: object
    webhooks_list:
      example:
        webhooks:
        - environments:
          - environments
          - environments
          id: id
          href: href
          url: url
          enabled: true
          events:
          - events
          - events
          token: token
        - environments:
          - environments
          - environments
          id: id
          href: href
          url: url
          enabled: true
          events:
          - events
          - events
          token: token
      properties:
        webhooks:
          items:
            $ref: '#/components/schemas/webhook'
          type: array
      type: object
    webhook:
      example:
        environments:
        - environments
        - environments
        id: id
        href: href
        url: url
        enabled: true
        events:
        - events
        - events
        token: token
      properties:
        id:
          description: The unique identifier of the webhook. Read-only.
          readOnly: true
          type: string
        token:
          description: Webhook secret token used to sign the webhook's payload. Read-only.
          readOnly: true
          type: string
        href:
          description: The API endpoint to retrieve the webhook. Read-only.
          readOnly: true
          type: string
        url:
          description: The url that will listen to notifications (must be https).
          type: string
        enabled:
          description: Determine if the webhook is active.
          type: boolean
        environments:
          description: |
            The environments from which the webhook will receive events. Allowed values are “sandbox” and “live”. If the environments parameter is omitted the webhook will receive events from both environments.
          items:
            type: string
          type: array
        events:
          description: |
            The events that will be published to the webhook. The supported events are: `report.completed`, `report.withdrawn`, `check.completed`, `check.started`, `check.form_opened`, `check.form_completed`. If the events parameter is omitted all the events will be subscribed.
          items:
            type: string
          type: array
      required:
      - url
      type: object
    addresses_list:
      example:
        addresses:
        - building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
        - building_name: building_name
          country: country
          town: town
          flat_number: flat_number
          street: street
          postcode: postcode
          state: state
          line3: line3
          line2: line2
          building_number: building_number
          line1: line1
          sub_street: sub_street
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/address'
          type: array
      type: object
    sdk_token:
      example:
        cross_device_url: cross_device_url
        referrer: referrer
        applicant_id: applicant_id
        application_id: application_id
        token: token
      properties:
        applicant_id:
          description: The unique identifier of the applicant
          type: string
          writeOnly: true
        referrer:
          description: The referrer URL pattern
          type: string
          writeOnly: true
        application_id:
          description: The application ID (iOS or Android)
          type: string
          writeOnly: true
        cross_device_url:
          description: Enterprise Feature - The URL to be used for the cross device
            flow of the Web SDK
          type: string
          writeOnly: true
        token:
          description: The generated SDK token
          readOnly: true
          type: string
      type: object
    address:
      example:
        building_name: building_name
        country: country
        town: town
        flat_number: flat_number
        street: street
        postcode: postcode
        state: state
        line3: line3
        line2: line2
        building_number: building_number
        line1: line1
        sub_street: sub_street
      properties:
        flat_number:
          description: The flat number of this address
          type: string
        building_number:
          description: The building number of this address
          type: string
        building_name:
          description: The building name of this address
          type: string
        street:
          description: The street of the applicant’s address
          type: string
        sub_street:
          description: The sub-street of the applicant’s address
          type: string
        town:
          description: The town of the applicant’s address
          type: string
        postcode:
          description: The postcode or ZIP of the applicant’s address
          type: string
        country:
          description: The 3 character ISO country code of this address. For example,
            GBR is the country code for the United Kingdom
          type: string
        state:
          description: The address state. US states must use the USPS abbreviation
            (see also ISO 3166-2:US), for example AK, CA, or TX.
          type: string
        line1:
          description: Line 1 of the applicant's address
          type: string
        line2:
          description: Line 2 of the applicant's address
          type: string
        line3:
          description: Line 3 of the applicant's address
          type: string
      type: object
    id_number:
      example:
        type: type
        state_code: state_code
        value: value
      properties:
        type:
          description: Type of ID number. Valid values are `ssn`, `social_insurance`,
            `tax_id`, `identity_card`, `passport` and `driving_license`
          type: string
        value:
          description: Value of ID number
          type: string
        state_code:
          description: Two letter code of issuing state (state-issued driving licenses
            only)
          type: string
      type: object
    report_document:
      example:
        id: id
      properties:
        id:
          description: ID of uploaded document to use.
          type: string
      required:
      - id
      type: object
    ErrorProperties:
      properties:
        type:
          type: string
        message:
          type: string
        fields:
          additionalProperties: true
          type: object
      title: ErrorProperties
      type: object
    Error:
      properties:
        error:
          $ref: '#/components/schemas/ErrorProperties'
      title: Error
      type: object
    inline_object:
      properties:
        applicant_id:
          description: The ID of the applicant whose document is being uploaded.
          type: string
        type:
          description: The type of document.
          type: string
        file:
          description: The file to be uploaded.
          format: binary
          type: string
        side:
          description: Either the `front` or `back` of the document.
          type: string
        issuing_country:
          description: The issuing country of the document, a 3-letter ISO code.
          type: string
      required:
      - applicant_id
      - file
      - type
      type: object
    inline_object_1:
      properties:
        applicant_id:
          type: string
        file:
          description: The file to be uploaded.
          format: binary
          type: string
        advanced_validation:
          default: true
          description: Validates that the live photo contains exactly one face.
          type: boolean
      required:
      - applicant_id
      - file
      type: object
  securitySchemes:
    Token:
      in: header
      name: Authorization
      type: apiKey
